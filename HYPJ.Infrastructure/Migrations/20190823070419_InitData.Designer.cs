// <auto-generated />
using System;
using HYPJ.Core.Enums;
using HYPJ.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HYPJ.Infrastructure.Migrations
{
    [DbContext(typeof(StarCloudDbContext))]
    [Migration("20190823070419_InitData")]
    partial class InitData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("LYPJ")
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HYPJ.Core.Entites.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar");

                    b.Property<DateTime?>("BirthOn");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("FullName")
                        .IsRequired();

                    b.Property<bool>("IsDisplay");

                    b.Property<DateTime>("LatestUpdatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Phone");

                    b.Property<int>("RoleId");

                    b.Property<string>("Salt")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("CityCode")
                        .IsRequired();

                    b.Property<string>("Country");

                    b.Property<string>("CountryCode");

                    b.Property<string>("Detail")
                        .IsRequired();

                    b.Property<string>("District")
                        .IsRequired();

                    b.Property<string>("DistrictCode")
                        .IsRequired();

                    b.Property<string>("Province")
                        .IsRequired();

                    b.Property<string>("ProvinceCode")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.Advert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alt");

                    b.Property<DateTime>("FailureAt");

                    b.Property<string>("ImagePath")
                        .IsRequired();

                    b.Property<bool>("IsShow")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<int>("MaxNumber");

                    b.HasKey("Id");

                    b.ToTable("Advert");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.AdvertCommodity", b =>
                {
                    b.Property<int>("AdvertId");

                    b.Property<int>("CommodityId");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("AdvertId", "CommodityId");

                    b.HasIndex("CommodityId");

                    b.ToTable("AdvertCommodity");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.BankCard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankCode")
                        .IsRequired();

                    b.Property<string>("CardNumber")
                        .IsRequired();

                    b.Property<int>("MerchantId");

                    b.Property<string>("OpeningBank")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("MerchantId");

                    b.ToTable("BankCard");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.BillsFlow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId");

                    b.Property<int>("BillsStatus")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(204);

                    b.Property<string>("Note");

                    b.Property<long>("PaymentRecordId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("PaymentRecordId")
                        .IsUnique();

                    b.ToTable("BillsFlow");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icon")
                        .IsRequired();

                    b.Property<string>("Key")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.CdyDThelabel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TheLabel")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("CdyDThelabel");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.CdyDThelabelCommodityDetail", b =>
                {
                    b.Property<int>("CdyDThelabelId");

                    b.Property<int>("CommodityDetailId");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("CdyDThelabelId", "CommodityDetailId");

                    b.HasIndex("CommodityDetailId");

                    b.ToTable("CdyDThelabelCommodityDetail");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.CdySalesPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommodityId");

                    b.Property<decimal>("PlanPrice")
                        .HasColumnType("Decimal(9,2)");

                    b.Property<DateTime>("PlanTime");

                    b.HasKey("Id");

                    b.HasIndex("CommodityId");

                    b.ToTable("CdySalesPlan");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.CdySmallestUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UnitType")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("CdySmallestUnit");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.CdySmallestUnitCommodities", b =>
                {
                    b.Property<int>("CommodityId");

                    b.Property<int>("CdySamllestUnitId");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("CommodityId", "CdySamllestUnitId");

                    b.HasIndex("CdySamllestUnitId");

                    b.ToTable("CdySmallestUnitCommodities");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.CdyThelabel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("CdyThelabel");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.CdyThelabelCommodity", b =>
                {
                    b.Property<int>("CommdityId");

                    b.Property<int>("CdyThelabelId");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("CommdityId", "CdyThelabelId");

                    b.HasIndex("CdyThelabelId");

                    b.ToTable("CdyThelabelCommodity");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.Commodity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AsOfTime");

                    b.Property<int>("CategoryId");

                    b.Property<int>("CommodityStatus")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("ImagePath");

                    b.Property<decimal>("MarketPrice")
                        .HasColumnType("DECIMAL(9,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(9,2)");

                    b.Property<int>("Sequence")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<string>("SerialNumber")
                        .IsRequired();

                    b.Property<DateTime?>("ShelfTime");

                    b.Property<string>("TitileOrName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Commodity");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.CommodityDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityAddressDescription")
                        .IsRequired();

                    b.Property<string>("ActivityTimeDescription")
                        .IsRequired();

                    b.Property<int>("CommodityId");

                    b.Property<string>("DetailPath")
                        .IsRequired();

                    b.Property<string>("NeedKnowPath")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CommodityId")
                        .IsUnique();

                    b.ToTable("CommodityDetail");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.CommodityDetailPirture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommodityDetailId");

                    b.Property<string>("Path")
                        .IsRequired();

                    b.Property<int>("Sequence")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("CommodityDetailId");

                    b.ToTable("CommodityDetailPirture");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateOn");

                    b.Property<long?>("DefaultBillingAddressId");

                    b.Property<DateTime>("LastOn");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<string>("Salt")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.CustomerAddress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<DateTime>("CreateOn");

                    b.Property<int>("CustomerId");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAddress");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionSref");

                    b.Property<string>("Icon");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentId");

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.MerchantInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BankCardId");

                    b.Property<string>("IdCard");

                    b.Property<long>("MerchatId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("MerchantInfo");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommoditySerialNumber")
                        .IsRequired();

                    b.Property<string>("Contact")
                        .IsRequired();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int>("CustomerId");

                    b.Property<DateTime>("LatestUpdatedOn");

                    b.Property<int>("OrderCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("OrderSerialNumber")
                        .IsRequired();

                    b.Property<int>("OrderStatus")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("Decimal(9,2)");

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("Decimal(9,2)");

                    b.Property<string>("TitileOrName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.OrderAddress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<string>("AddressLine");

                    b.Property<string>("ContactName")
                        .IsRequired();

                    b.Property<long>("OrderId");

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("OrderAddress");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.PaymentRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("OrderId");

                    b.Property<string>("PaymentSerialNumber")
                        .IsRequired();

                    b.Property<int>("PaymentType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("PaymentRecord");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<bool>("IsSuperAdmin")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(32)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.RoleMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MenuId");

                    b.Property<int>("Permission")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleMenu");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.SetMeal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<decimal>("MarketPrice")
                        .HasColumnType("DECIMAL(9,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(9,2)");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("SetMeal");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.SetMealStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HaveSalesQuantity")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<int>("ReservedQuantity")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<int>("SetMealId");

                    b.HasKey("Id");

                    b.HasIndex("SetMealId")
                        .IsUnique();

                    b.ToTable("SetMealStock");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommodityId");

                    b.Property<int>("HaveSalesQuantity")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<int>("ReservedQuantity")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("CommodityId")
                        .IsUnique();

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessLicense");

                    b.Property<DateTime>("BusinessTime");

                    b.Property<double?>("Latitude");

                    b.Property<string>("LegalPerson")
                        .IsRequired();

                    b.Property<double?>("Longitude");

                    b.Property<int>("MerchantId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("StoreAddressId");

                    b.HasKey("Id");

                    b.HasIndex("MerchantId");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.StoreAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.HasKey("Id");

                    b.HasAlternateKey("AddressId");

                    b.ToTable("StoreAddress");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.StoreCommodities", b =>
                {
                    b.Property<int>("CommodityId");

                    b.Property<int>("StoreId");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("CommodityId", "StoreId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreCommodities");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.WxCustomer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avtar");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("CustomerId");

                    b.Property<int>("GenderType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("NickName");

                    b.Property<string>("OpenId")
                        .IsRequired();

                    b.Property<string>("Province");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("WxCustomer");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.Account", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.Role", "Role")
                        .WithMany("AccountModels")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.AdvertCommodity", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.Advert", "Advert")
                        .WithMany("AdvertCommodities")
                        .HasForeignKey("AdvertId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HYPJ.Core.Entites.Commodity", "Commodity")
                        .WithMany("AdvertCommodities")
                        .HasForeignKey("CommodityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.BankCard", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.MerchantInfo", "MerchantInfo")
                        .WithMany("BankCards")
                        .HasForeignKey("MerchantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.BillsFlow", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.Account", "Account")
                        .WithMany("BillsFlows")
                        .HasForeignKey("AccountId");

                    b.HasOne("HYPJ.Core.Entites.PaymentRecord", "PaymentRecord")
                        .WithOne("BillsFlow")
                        .HasForeignKey("HYPJ.Core.Entites.BillsFlow", "PaymentRecordId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.CdyDThelabelCommodityDetail", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.CdyDThelabel", "CdyDThelabel")
                        .WithMany("CdyDThelabelCommodityDetails")
                        .HasForeignKey("CdyDThelabelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HYPJ.Core.Entites.CommodityDetail", "CommodityDetail")
                        .WithMany("CdyDThelabelCommodityDetails")
                        .HasForeignKey("CommodityDetailId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.CdySalesPlan", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.Commodity", "Commodity")
                        .WithMany("CdySalesPlans")
                        .HasForeignKey("CommodityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.CdySmallestUnitCommodities", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.CdySmallestUnit", "CdySmallestUnit")
                        .WithMany("CdySmallestUnitCommodities")
                        .HasForeignKey("CdySamllestUnitId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HYPJ.Core.Entites.Commodity", "Commodity")
                        .WithMany("CdySmallestUnitCommodities")
                        .HasForeignKey("CommodityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.CdyThelabelCommodity", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.CdyThelabel", "CdyThelabel")
                        .WithMany("CdyThelabelCommodities")
                        .HasForeignKey("CdyThelabelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HYPJ.Core.Entites.Commodity", "Commodity")
                        .WithMany("CdyThelabelCommodities")
                        .HasForeignKey("CommdityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.Commodity", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.Category", "Category")
                        .WithMany("Commoditys")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.CommodityDetail", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.Commodity", "Commodity")
                        .WithOne("CommodityDetail")
                        .HasForeignKey("HYPJ.Core.Entites.CommodityDetail", "CommodityId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.CommodityDetailPirture", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.CommodityDetail", "CommodityDetail")
                        .WithMany("CommodityDetailPirtures")
                        .HasForeignKey("CommodityDetailId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.CustomerAddress", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.Address", "Address")
                        .WithOne("CustomerAddress")
                        .HasForeignKey("HYPJ.Core.Entites.CustomerAddress", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HYPJ.Core.Entites.Customer", "Customer")
                        .WithMany("CustomerAddress")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.Menu", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.Menu", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("HYPJ.Core.Entites.Order", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.OrderAddress", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.Address", "Address")
                        .WithOne("OrderAddress")
                        .HasForeignKey("HYPJ.Core.Entites.OrderAddress", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HYPJ.Core.Entites.Order", "Order")
                        .WithOne("OrderAddress")
                        .HasForeignKey("HYPJ.Core.Entites.OrderAddress", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.PaymentRecord", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.Order", "Order")
                        .WithMany("PaymentRecords")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.RoleMenu", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.Menu", "Menu")
                        .WithMany("RoleMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HYPJ.Core.Entites.Role", "Role")
                        .WithMany("RoleMenus")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.SetMealStock", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.SetMeal", "SetMeal")
                        .WithOne("SetMealStock")
                        .HasForeignKey("HYPJ.Core.Entites.SetMealStock", "SetMealId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.Stock", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.Commodity", "Commodity")
                        .WithOne("Stock")
                        .HasForeignKey("HYPJ.Core.Entites.Stock", "CommodityId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.Store", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.MerchantInfo", "MerchantInfo")
                        .WithMany("Stores")
                        .HasForeignKey("MerchantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.StoreAddress", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.Address", "Address")
                        .WithOne("StoreAddress")
                        .HasForeignKey("HYPJ.Core.Entites.StoreAddress", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HYPJ.Core.Entites.Store", "Store")
                        .WithOne("StoreAddress")
                        .HasForeignKey("HYPJ.Core.Entites.StoreAddress", "AddressId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.StoreCommodities", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.Commodity", "Commodity")
                        .WithMany("StoreCommodities")
                        .HasForeignKey("CommodityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HYPJ.Core.Entites.Store", "Store")
                        .WithMany("StoreCommodities")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HYPJ.Core.Entites.WxCustomer", b =>
                {
                    b.HasOne("HYPJ.Core.Entites.Customer", "Customer")
                        .WithOne("WxCustomer")
                        .HasForeignKey("HYPJ.Core.Entites.WxCustomer", "CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
